// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2020-04-21 18:06:59.804696 -0400 EDT m=+8.333264118

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "SMARTA Support",
            "email": "smartatransit@gmail.com"
        },
        "license": {
            "name": "GNU General Public License v3.0",
            "url": "https://github.com/smartatransit/third_rail/blob/master/LICENSE"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/live/schedule/line/{line}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Given a line, return the current schedule",
                "produces": [
                    "application/json"
                ],
                "summary": "Get Schedule By Line",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Line",
                        "name": "line",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.response": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.responseData"
                    }
                }
            }
        },
        "controllers.responseData": {
            "type": "object",
            "properties": {
                "schedule": {
                    "type": "object",
                    "$ref": "#/definitions/marta_schemas.Schedule"
                },
                "station": {
                    "type": "object",
                    "$ref": "#/definitions/marta_schemas.Station"
                }
            }
        },
        "marta_schemas.Schedule": {
            "type": "object",
            "properties": {
                "destination": {
                    "type": "string"
                },
                "event_time": {
                    "type": "string"
                },
                "next_arrival": {
                    "type": "string"
                },
                "next_station": {
                    "type": "string"
                },
                "train_id": {
                    "type": "string"
                },
                "waiting_seconds": {
                    "type": "string"
                },
                "waiting_time": {
                    "type": "string"
                }
            }
        },
        "marta_schemas.Station": {
            "type": "object",
            "properties": {
                "direction": {
                    "type": "string"
                },
                "line": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "http://third-rail-secure.services.ataper.net",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "SMARTA API",
	Description: "API to serve you SMARTA data",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
